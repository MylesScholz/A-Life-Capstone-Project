name: Build

on: 
  pull_request:
    types: [opened, edited, reopened, synchronize]

env:
  # Only used for the cache key. Increment version to force clean build.
  GODOT_BASE_BRANCH: master

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: üêß Linux (GCC)
            os: ubuntu-20.04
            platform: linux

          - name: üêß Linux (GCC, Double Precision)
            os: ubuntu-20.04
            platform: linux
            flags: precision=double

          - name: üèÅ Windows (x86_64, MSVC)
            os: windows-2019
            platform: windows

          - name: üèÅ Windows (x86_64, MinGW)
            os: windows-2019
            platform: windows
            flags: use_mingw=yes

          - name: üçé macOS (universal)
            os: macos-11
            platform: macos
            flags: arch=universal

          # - name: ü§ñ Android (arm64)
          #   os: ubuntu-20.04
          #   platform: android
          #   flags: arch=arm64

          # - name: üçè iOS (arm64)
          #   os: macos-11
          #   platform: ios
          #   flags: arch=arm64

          # - name: üåê Web (wasm32)
          #   os: ubuntu-20.04
          #   platform: web

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python (for SCons)
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Android dependencies
        if: ${{ matrix.platform == 'android' }}
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r23c
          link-to-sdk: true

      - name: Web dependencies
        if: ${{ matrix.platform == 'web' }}
        uses: mymindstorm/setup-emsdk@v13

      - name: Setup MinGW for Windows/MinGW build
        if: ${{ matrix.platform == 'windows' && matrix.flags == 'use_mingw=yes' }}
        uses: egor-tensin/setup-mingw@v2
        with:
          version: 12.2.0

      - name: Install scons
        run: |
          python -m pip install scons==4.0.0

      - name: Generate godot-cpp sources only
        run: |
          cd godot-cpp
          scons platform=${{ matrix.platform }} build_library=no ${{ matrix.flags }}
          scons -c

      - name: Build godot-cpp (debug)
        run: |
          cd godot-cpp
          scons platform=${{ matrix.platform }} target=template_debug ${{ matrix.flags }}

      - name: Build without rebuilding godot-cpp (debug)
        run: |
          scons platform=${{ matrix.platform }} target=template_debug ${{ matrix.flags }} build_library=no

      - name: Build with godot-cpp (release)
        run: |
          scons platform=${{ matrix.platform }} target=template_release ${{ matrix.flags }}